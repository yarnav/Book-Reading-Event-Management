@model IList<Company.Project.Web.Models.EventViewModel>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> _signInManager
@inject UserManager<IdentityUser> _userManager

@{ ViewData["Title"] = "Index"; }
@{
    var user = await _userManager.GetUserAsync(User);
    var email = user != null ? user.Email : "";

}
<div class="container">
    @if (Model.Count == 0)
    {
        <div>
            <h4 class="text-info">Not invited yet to any event </h4>
        </div>
    }
    else
    {
           
        <div class="container">
            <div class="container">
                <p></p>
                <p></p>
                <p></p>
                <h4>You are invited in the Events below : </h4>
                <hr  />
                <h3 class="text-success">Upcoming Events</h3>
                <hr class="border-dark" />
                <p></p>
                <p></p>
                <div class="row">
                    
                    @foreach (var _event in Model)
                    {
                        if ((_event.Invitees) == null)
                            continue;
                        else if (@_event.Invitees.Split(',').Contains(email) && _event.Date > DateTime.Now || @_event.Invitees.Split(' ').Contains(email) && _event.Date > DateTime.Now)
                        {
                            <partial name="_NewestEventFirst" model="@_event" />
                        }


                    }

                </div>
            </div>
            <div class="container">
                <h3  class="text-success">Past Events</h3>
                <hr class="border-dark" />
                <p></p>
                <p></p>
                <div class="row">

                    @foreach (var _event in Model)
                    {
                        if ((_event.Invitees) == null)
                            continue;
                        else if (@_event.Invitees.Split(',').Contains(email) && _event.Date < DateTime.Now || @_event.Invitees.Split(' ').Contains(email) && _event.Date < DateTime.Now)
                        {
                            <partial name="_NewestEventFirst" model="@_event" />
                        }

                    }

                </div>
            </div>

        </div>

    }

</div>
